package com.nara.multiple.book.dbconfig;

import java.util.HashMap;
import java.util.Map;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.jdbc.DataSourceBuilder;
import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@EnableTransactionManagement
@EnableJpaRepositories(entityManagerFactoryRef = "entityManagerFactory", basePackages = {"com.nara.multiple.book.repository"})
public class BookDBConfig {
	
	
	//datasource
	@Primary
	@Bean(name="datasource")
	@ConfigurationProperties(prefix = "spring.book.datasource")
	public DataSource datasource( ) {
		return DataSourceBuilder.create().build();
	}
	
	
	//entityManageFactory
	@Primary
	@Bean(name="entityManagerFactory")
	public LocalContainerEntityManagerFactoryBean entityManagerFactory(@Qualifier("datasource")DataSource datasource, EntityManagerFactoryBuilder builder) {
		Map<String, Object> properties = new HashMap<>();
		properties.put("hibernate.hdb2ddl.auto", "update");
		properties.put("jpa.database-platform", "org.hibernate.dialect.H2Dialect");
		return builder.dataSource(datasource)
				.properties(properties)
				.packages("com.nara.multiple.model.book")
				.persistenceUnit("Book")
				.build();
	}
	//TransactionManager

}
